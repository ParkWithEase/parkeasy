name: Backend CI

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main

concurrency:
  # Makes sure only one is run per PR
  group: backend-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    continue-on-error: true # Errors here should not crash the job
    name: Check backend for changes
    outputs:
      exists: ${{ steps.changed.outputs.exists }}
    runs-on: ubuntu-latest

    steps:
      - id: changed
        uses: yumemi-inc/changed-files@v3
        with:
          patterns: |
            .github/workflows/backend.yaml
            backend/**
            !backend/docs/**
            !backend/README.md

  lint:
    needs: [changes]
    if: needs.changes.outputs.exists != 'false'

    name: Backend lint checks
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: backend

      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: |
            backend/go.sum

      - uses: golangci/golangci-lint-action@v6
        with:
          version: latest
          working-directory: backend

  dbmodel:
    needs: [changes]
    if: needs.changes.outputs.exists != 'false' && github.event_name != 'push'

    name: Backend DB model up-to-date
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: backend

      - uses: nickcharlton/diff-check@v1.0.0
        with:
          command: |
            cd backend
            go run ./tools/modelgen -v

  test:
    needs: [changes]
    if: needs.changes.outputs.exists != 'false'

    name: Backend tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: backend

      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: |
            backend/go.sum

      - run: INTEGRATION=1 go test -race -coverprofile=coverage.txt ./...
        working-directory: backend

      - uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: backend/coverage.txt
          flags: backend
          disable_file_fixes: true # This is not compatible with sparse-checkout

  build:
    needs: [changes]
    if: needs.changes.outputs.exists != 'false' && github.event_name != 'push'

    name: Backend container build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: backend

      - name: Get Git commit timestamps
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV

      - name: Create container metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/parkwithease/parkserver
          tags: |
            type=sha
            type=ref,event=pr

      - name: Setup Docker BuildKit
        uses: docker/setup-buildx-action@v3

      - name: Build container image
        uses: docker/build-push-action@v6
        with:
          push: false
          context: backend
          file: backend/Containerfile
          cache-from: type=gha
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: |
            type=docker,dest=${{ runner.temp }}/parkserver.tar.zst,compression=zstd
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}

      - name: Upload container image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: parkserver container
          path: ${{ runner.temp }}/parkserver.tar.zst

  codeql:
    needs: [changes]
    if: needs.changes.outputs.exists != 'false'

    name: Github CodeQL security scan for backend
    runs-on: ubuntu-latest
    permissions:
      security-events: write

    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github
            backend

      - uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: |
            backend/go.sum

      - uses: github/codeql-action/init@v3
        with:
          languages: go
          build-mode: manual
          queries: security-and-quality

      - name: Build backend
        run: go build ./cmd/parkserver
        working-directory: backend

      - uses: github/codeql-action/analyze@v3
        with:
          category: "/language:go"
